{"version":3,"sources":["Components/Photos/photos.module.css","reselect/AlbumsReselect.js","Components/Albums/CurrentAlbum/AlbumPhoto.jsx","Components/Albums/CurrentAlbum/AlbumPhotos.jsx","Components/Albums/CurrentAlbum/CurrentAlbumContainer.jsx"],"names":["module","exports","getAlbumsRs","state","albumsPage","albums","getPageSizeRs","pageSize","getCurrentPageRs","currentPage","getPhotosAlmubsRs","photosAlbum","Meta","Card","AlbumPhoto","props","className","s","photo","hoverable","style","width","cover","src","photos","url","title","AlbumPhotos","Preloader","photosContainer","map","p","id","CurentAlbumContainer","albumId","this","match","params","history","push","getPhotosAlbum","to","React","Component","compose","connect"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,MAAQ,sBAAsB,aAAe,6BAA6B,QAAU,0B,iCCDxJ,wIAAO,IAAMC,EAAY,SAACC,GACtB,OAAOA,EAAMC,WAAWC,QAGfC,EAAc,SAACH,GACxB,OAAOA,EAAMC,WAAWG,UAGfC,EAAiB,SAACL,GAC3B,OAAOA,EAAMC,WAAWK,aAGfC,EAAkB,SAACP,GAC5B,OAAOA,EAAMC,WAAWO,c,sJCTpBC,EAASC,IAATD,KAgBOE,EAdI,SAACC,GAChB,OACI,qBAAKC,UAAWC,IAAEC,MAAlB,SACI,cAAC,IAAD,CACIC,WAAS,EACTC,MAAO,CAAEC,MAAO,KAChBC,MAAO,qBAAMC,IAAKR,EAAMS,OAAOC,MAHnC,SAKI,cAACb,EAAD,CAAMc,MAAOX,EAAMS,OAAOE,a,QCE3BC,EAVK,SAACZ,GAEjB,OAAyB,OAApBA,EAAMJ,YAA4B,cAACiB,EAAA,EAAD,IAEnC,qBAAKZ,UAAWC,IAAEY,gBAAlB,SACKd,EAAMJ,YAAYmB,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYP,OAAQO,GAAQA,EAAEC,U,kBCFhEC,E,uKACF,WACI,IAAIC,EAAUC,KAAKpB,MAAMqB,MAAMC,OAAOH,QACjCA,GACDC,KAAKpB,MAAMuB,QAAQC,KAAK,WAE5BJ,KAAKpB,MAAMyB,eAAeN,K,oBAG9B,WACI,OAAQ,qCACA,cAAC,IAAD,CAAMO,GAAG,UAAT,kBACA,cAAC,EAAD,CAAa9B,YAAawB,KAAKpB,MAAMJ,cACrC,cAAC,IAAD,CAAM8B,GAAG,UAAT,yB,GAbmBC,IAAMC,WAuB1BC,sBACXC,aALkB,SAAC1C,GAAD,MAAY,CAC9BQ,YAAaD,YAAkBP,MAIN,CAACqC,qBADfI,CAEbX","file":"static/js/7.5a7752c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"photosContainer\":\"photos_photosContainer__3EoCe\",\"photo\":\"photos_photo__IlyUk\",\"contentStyle\":\"photos_contentStyle__3zpHr\",\"corusel\":\"photos_corusel__cEXOj\"};","export const getAlbumsRs=(state)=>{\r\n    return state.albumsPage.albums\r\n}\r\n\r\nexport const getPageSizeRs=(state)=>{\r\n    return state.albumsPage.pageSize\r\n}\r\n\r\nexport const getCurrentPageRs=(state)=>{\r\n    return state.albumsPage.currentPage\r\n}\r\n\r\nexport const getPhotosAlmubsRs=(state)=>{\r\n    return state.albumsPage.photosAlbum\r\n}","import React from 'react';\r\nimport { Card } from 'antd';\r\nimport s from '../../Photos/photos.module.css'\r\n\r\nconst { Meta } = Card;\r\n\r\nconst AlbumPhoto = (props) => {\r\n    return (\r\n        <div className={s.photo}>\r\n            <Card\r\n                hoverable\r\n                style={{ width: 240 }}\r\n                cover={<img  src={props.photos.url} />}\r\n            >\r\n                <Meta title={props.photos.title} />\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AlbumPhoto;","import React from 'react';\r\n\r\nimport s from '../../Photos/photos.module.css'\r\nimport AlbumPhoto from \"./AlbumPhoto\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nconst AlbumPhotos = (props) => {\r\n\r\n    if  (props.photosAlbum===null){return  <Preloader />}\r\n    return (\r\n        <div className={s.photosContainer}>\r\n            {props.photosAlbum.map(p => <AlbumPhoto photos={p} key={p.id}/> )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AlbumPhotos;","import React from 'react';\r\n\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport AlbumPhotos from \"./AlbumPhotos\";\r\nimport {getPhotosAlbum} from \"../../../reducers/albums-reducer\";\r\nimport {getPhotosAlmubsRs} from \"../../../reselect/AlbumsReselect\";\r\n\r\nclass CurentAlbumContainer extends React.Component {\r\n    componentDidMount() {\r\n        let albumId = this.props.match.params.albumId;\r\n        if (!albumId) {\r\n            this.props.history.push(\"/albums\")\r\n        }\r\n        this.props.getPhotosAlbum(albumId)\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n                <Link to='/albums'>back</Link>\r\n                <AlbumPhotos photosAlbum={this.props.photosAlbum}/>\r\n                <Link to='/albums'>back</Link>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    photosAlbum: getPhotosAlmubsRs(state),\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getPhotosAlbum})\r\n)(CurentAlbumContainer);"],"sourceRoot":""}