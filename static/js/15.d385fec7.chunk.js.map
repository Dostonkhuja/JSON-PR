{"version":3,"sources":["Components/Posts/Post.jsx","Components/Posts/Posts.jsx","reselect/PostsReselect.js","Components/Posts/PostsContainer.jsx"],"names":["Post","props","style","marginTop","posts","title","body","Posts","size","showQuickJumper","defaultCurrent","defaultPageSize","total","length","onChange","pageNumber","pageSize","updateCurrentPage","updatePageSize","slice","currentPage","map","p","id","getPostsRs","state","postsPage","getPostsPageSizeRs","getPostsCurrentPageRs","PostsContainer","this","getPosts","React","Component","compose","connect"],"mappings":"0NAceA,EAVF,SAACC,GACV,OACI,eAAC,IAAD,CAAMC,MAAO,CAACC,UAAW,IAAzB,UACI,4BAAIF,EAAMG,MAAMC,QAChB,uBACA,4BAAIJ,EAAMG,MAAME,W,kBCuBbC,EA3BD,SAACN,GACX,GAAoB,OAAhBA,EAAMG,MACN,OAAO,cAAC,IAAD,CAAMI,KAAK,UAOtB,OACI,gCACI,cAAC,IAAD,CACIC,iBAAe,EACfC,eAAgB,EAChBC,gBAAiB,GACjBC,MAAOX,EAAMG,MAAMS,OACnBC,SAXkB,SAACC,EAAYC,GACvCf,EAAMgB,kBAAkBF,GACxBd,EAAMiB,eAAeF,MAYbf,EAAMG,MACDe,MAAMlB,EAAMmB,YAAcnB,EAAMe,SAAUf,EAAMmB,YAAcnB,EAAMe,SAAWf,EAAMe,UACrFK,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMlB,MAAOkB,GAAQA,EAAEC,W,yBC1BxCC,EAAW,SAACC,GACrB,OAAOA,EAAMC,UAAUtB,OAGduB,EAAmB,SAACF,GAC7B,OAAOA,EAAMC,UAAUV,UAGdY,EAAsB,SAACH,GAChC,OAAOA,EAAMC,UAAUN,aCDrBS,E,uKACF,WACIC,KAAK7B,MAAM8B,a,oBAGf,WACI,OAAO,cAAC,EAAD,CACCd,kBAAmBa,KAAK7B,MAAMgB,kBAC9BC,eAAgBY,KAAK7B,MAAMiB,eAC3BE,YAAaU,KAAK7B,MAAMmB,YACxBJ,SAAUc,KAAK7B,MAAMe,SACrBZ,MAAO0B,KAAK7B,MAAMG,Y,GAXL4B,IAAMC,WAsBpBC,sBACXC,aAPoB,SAACV,GAAD,MAAY,CAChCrB,MAAOoB,EAAWC,GAClBT,SAAUW,EAAmBF,GAC7BL,YAAaQ,EAAsBH,MAIV,CAACM,aAAUb,mBAAgBD,wBADzCiB,CAEZL","file":"static/js/15.d385fec7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport {Card} from \"antd\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <Card style={{marginTop: 15}}>\r\n            <p>{props.posts.title}</p>\r\n            <br/>\r\n            <i>{props.posts.body}</i>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\n\r\nimport Post from \"./Post\";\r\nimport {Pagination, Spin} from \"antd\";\r\n\r\nconst Posts = (props) => {\r\n    if (props.posts === null) {\r\n        return <Spin size=\"large\"/>\r\n    }\r\n\r\n    let onPaginationValueChange = (pageNumber, pageSize,) => {\r\n        props.updateCurrentPage(pageNumber)\r\n        props.updatePageSize(pageSize)\r\n    }\r\n    return (\r\n        <div>\r\n            <Pagination\r\n                showQuickJumper\r\n                defaultCurrent={1}\r\n                defaultPageSize={10}\r\n                total={props.posts.length}\r\n                onChange={onPaginationValueChange}\r\n            />\r\n            {\r\n                props.posts\r\n                    .slice(props.currentPage * props.pageSize, props.currentPage * props.pageSize + props.pageSize)\r\n                    .map(p => <Post posts={p} key={p.id}/>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","export const getPostsRs=(state)=>{\r\n    return state.postsPage.posts\r\n}\r\n\r\nexport const getPostsPageSizeRs=(state)=>{\r\n    return state.postsPage.pageSize\r\n}\r\n\r\nexport const getPostsCurrentPageRs=(state)=>{\r\n    return state.postsPage.currentPage\r\n}","import React from 'react';\r\n\r\nimport Posts from \"./Posts\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPosts, updateCurrentPage, updatePageSize} from \"../../reducers/posts-reducer\";\r\nimport {getPostsCurrentPageRs, getPostsPageSizeRs, getPostsRs} from \"../../reselect/PostsReselect\";\r\n\r\nclass PostsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getPosts()\r\n    }\r\n\r\n    render() {\r\n        return <Posts\r\n                updateCurrentPage={this.props.updateCurrentPage}\r\n                updatePageSize={this.props.updatePageSize}\r\n                currentPage={this.props.currentPage}\r\n                pageSize={this.props.pageSize}\r\n                posts={this.props.posts}\r\n            />\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    posts: getPostsRs(state),\r\n    pageSize: getPostsPageSizeRs(state),\r\n    currentPage: getPostsCurrentPageRs(state),\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getPosts, updatePageSize, updateCurrentPage})\r\n) (PostsContainer);"],"sourceRoot":""}