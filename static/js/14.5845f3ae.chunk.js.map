{"version":3,"sources":["Components/Login/SignUp.jsx"],"names":["ReduxLoginForm","reduxForm","form","handleSubmit","props","className","s","onSubmit","title","inputItem","createField","required","Input2","signUpButton","type","htmlType","error","compose","connect","state","isAuth","getIsAuth","setMyProfile","to","formData"],"mappings":"8QAoDMA,EAAeC,YAAU,CAACC,KAAK,SAAhBD,EAvCH,SAAC,GAA6B,IAA5BE,EAA2B,EAA3BA,aAAgBC,EAAW,gCAE3C,OAAQ,uBAAMC,UAAWC,IAAEJ,KAAMK,SAAUJ,EAAnC,UACA,oBAAIE,UAAWC,IAAEE,MAAjB,qBACA,sBAAKH,UAAWC,IAAEG,UAAlB,UACI,gDADJ,IAC+BC,YAAY,YAAY,WAAW,CAACC,KAAUC,QAE7E,sBAAKP,UAAWC,IAAEG,UAAlB,UACI,2CADJ,IAC0BC,YAAY,OAAO,OAAO,CAACC,KAAUC,QAE/D,sBAAKP,UAAWC,IAAEG,UAAlB,UACI,6CADJ,IAC4BC,YAAY,UAAU,UAAU,CAACC,KAAUC,QAEvE,sBAAKP,UAAWC,IAAEG,UAAlB,UACI,kDADJ,IACiCC,YAAY,eAAe,cAAc,CAACC,KAAUC,QAErF,sBAAKP,UAAWC,IAAEG,UAAlB,UACI,wCADJ,KACwBC,YAAY,KAAK,KAAK,CAACC,KAAUC,QAEzD,sBAAKP,UAAWC,IAAEG,UAAlB,UACI,4CADJ,IAC2BC,YAAY,SAAS,SAAS,CAACC,KAAUC,QAEpE,sBAAKP,UAAWC,IAAEG,UAAlB,UACI,2CAAqBC,YAAY,QAAQ,QAAQ,CAACC,KAAUC,QAEhE,sBAAKP,UAAWC,IAAEG,UAAlB,UACI,8CADJ,IAC6BC,YAAY,WAAW,UAAU,CAACC,KAAUC,QAEzE,sBAAKP,UAAWC,IAAEG,UAAlB,UACI,0CADJ,IACyBC,YAAY,QAAQ,QAAQ,CAACC,KAAUC,QAGhE,sBAAKP,UAAWC,IAAEO,aAAlB,cAAiC,cAAC,IAAD,CAAQC,KAAM,UAAWC,SAAS,SAAlC,qBAAjC,OACCX,EAAMY,OAAS,8BAAMZ,EAAMY,cA4BzBC,sBACXC,aALmB,SAACC,GAAD,MAAW,CAC9BC,OAAOC,YAAUF,MAIO,CAACG,mBADdL,EAnBA,SAAC,GAA2B,IAA1BK,EAAyB,EAAzBA,aAKb,OALsC,EAAZF,OAMf,cAAC,IAAD,CAAUG,GAAI,aAGjB,mCACA,cAACvB,EAAD,CAAgBO,SATP,SAACiB,GACdF,EAAaE","file":"static/js/14.5845f3ae.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport {Button} from 'antd';\r\nimport {compose} from \"redux\";\r\nimport s from './login.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {getIsAuth} from \"../../reselect/LoginReselect\";\r\nimport {setMyProfile} from \"../../reducers/auth-reducer\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {createField, Input2} from \"../common/FormsControls/FormsControls\";\r\n\r\nconst LoginForm = ({handleSubmit,...props}) => {\r\n\r\n    return (<form className={s.form} onSubmit={handleSubmit}>\r\n            <h1 className={s.title}>SIGN UP</h1>\r\n            <div className={s.inputItem}>\r\n                <span> User name: </span> {createField(\"User name\",'username',[required],Input2)}\r\n            </div>\r\n            <div className={s.inputItem}>\r\n                <span> Name: </span> {createField(\"Name\",'name',[required],Input2)}\r\n            </div>\r\n            <div className={s.inputItem}>\r\n                <span> Company:</span> {createField(\"Company\",'company',[required],Input2)}\r\n            </div>\r\n            <div className={s.inputItem}>\r\n                <span> Catch phrase:</span> {createField(\"Catch phrase\",'catchPhrase',[required],Input2)}\r\n            </div>\r\n            <div className={s.inputItem}>\r\n                <span> Bs:</span>  {createField(\"Bs\",'bs',[required],Input2)}\r\n            </div>\r\n            <div className={s.inputItem}>\r\n                <span> Adress:</span> {createField(\"Adress\",'adress',[required],Input2)}\r\n            </div>\r\n            <div className={s.inputItem}>\r\n                <span> email:</span>{createField(\"email\",'email',[required],Input2)}\r\n            </div>\r\n            <div className={s.inputItem}>\r\n                <span> web site:</span> {createField(\"web site\",'webSite',[required],Input2)}\r\n            </div>\r\n            <div className={s.inputItem}>\r\n                <span>phone:</span> {createField(\"phone\",'phone',[required],Input2)}\r\n            </div>\r\n\r\n            <div className={s.signUpButton}> <Button type={'primary'} htmlType=\"submit\">SIGN UP</Button> </div>\r\n            {props.error && <div>{props.error}</div>}\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nconst ReduxLoginForm=reduxForm({form:'login'})(LoginForm)\r\n\r\n\r\nconst SignUp = ({setMyProfile,isAuth}) => {\r\n    const onSubmit = (formData) => {\r\n        setMyProfile(formData)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (<>\r\n            <ReduxLoginForm onSubmit={onSubmit} />\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps= (state)=> ({\r\n    isAuth:getIsAuth(state)\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{setMyProfile}) //loginRequest\r\n)(SignUp);"],"sourceRoot":""}