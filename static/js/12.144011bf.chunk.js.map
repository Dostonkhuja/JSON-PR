{"version":3,"sources":["Components/Login/SignIn.jsx"],"names":["LoginForm","React","memo","onFinish","props","name","initialValues","remember","onFinishFailed","error","className","s","form","title","Item","formItem","label","rules","required","message","formItemInput","Password","valuePropName","formItemCheckbox","block","formItemButton","type","htmlType","ReduxLoginForm","reduxForm","SignIn","useEffect","openNotification","isAuth","to","notification","open","description","endForm","values","username","password","signInRequest","compose","connect","state","getIsAuth"],"mappings":"0SAWMA,EAAYC,IAAMC,MAAK,YAA2B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,4BAInD,OAAQ,eAAC,IAAD,CAAMC,KAAK,QAAQC,cAAe,CAACC,UAAU,GACzCJ,SAAUA,EAAUK,eAJT,SAACC,KAIwCC,UAAWC,IAAEC,KADrE,UAGA,oBAAIF,UAAWC,IAAEE,MAAjB,qBAEI,cAAC,IAAKC,KAAN,CAAWJ,UAAWC,IAAEI,SAAUC,MAAM,WAAWX,KAAK,WACpDY,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,gCADtC,SAEI,cAAC,IAAD,CAAOT,UAAWC,IAAES,kBAGxB,cAAC,IAAKN,KAAN,CAAWJ,UAAWC,IAAEI,SAAUC,MAAM,WAAWX,KAAK,WACpDY,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,gCADtC,SAEI,cAAC,IAAME,SAAP,CAAiBX,UAAWC,IAAES,kBAGlC,cAAC,IAAKN,KAAN,CAAWJ,UAAWC,IAAEI,SAAUV,KAAK,WAAWiB,cAAc,UAAhE,SACE,qBAAMZ,UAAWC,IAAEI,SAAnB,SACI,cAAC,IAAD,CAAUL,UAAWC,IAAEY,iBAAvB,6BAIN,cAAC,IAAKT,KAAN,CAAWJ,UAAWC,IAAEI,SAAxB,SACI,cAAC,IAAD,CAAQS,OAAK,EAACd,UAAWC,IAAEc,eAAgBC,KAAK,UAAUC,SAAS,SAAnE,uBAGHvB,EAAMK,OAAS,qBAAKC,UAAWC,IAAEF,MAAlB,SAA0BL,EAAMK,cAM1DmB,EAAiB3B,IAAMC,KAAK2B,YAAU,CAACjB,KAAM,SAAjBiB,CAA2B7B,IAKvD8B,EAAS7B,IAAMC,MAAK,SAACE,GACvB2B,qBAAU,WACNC,MACD,IAOH,GAAI5B,EAAM6B,OACN,OAAO,cAAC,IAAD,CAAUC,GAAI,aAGzB,IAAMF,EAAmB,WACrBG,IAAaC,KAAK,CACdjB,QAAS,GACTkB,YAGI,0VAGZ,OAAQ,qBAAK3B,UAAWC,IAAE2B,QAAlB,SACA,cAACV,EAAD,CAAgBzB,SAnBP,SAACoC,GAAY,IACnBC,EAAgCD,EAAhCC,SAAUC,EAAsBF,EAAtBE,SAAUlC,EAAYgC,EAAZhC,SAC3BH,EAAMsC,cAAcF,EAAUC,EAAUlC,WA0BjCoC,sBACXC,aALoB,SAACC,GAAD,MAAY,CAChCZ,OAAQa,YAAUD,MAIO,CAACH,oBADfC,CAEbb","file":"static/js/12.144011bf.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\n\r\nimport {compose} from \"redux\";\r\nimport s from './login.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {getIsAuth} from \"../../reselect/LoginReselect\";\r\nimport {signInRequest} from \"../../reducers/auth-reducer\";\r\nimport {Form, Input, Button, Checkbox,notification} from 'antd';\r\n\r\nconst LoginForm = React.memo(({onFinish, ...props}) => {\r\n    const onFinishFailed = (error) => {\r\n    };\r\n\r\n    return (<Form name=\"basic\" initialValues={{remember: false,}}\r\n                onFinish={onFinish} onFinishFailed={onFinishFailed} className={s.form}>\r\n\r\n            <h1 className={s.title}>Sign In</h1>\r\n\r\n                <Form.Item className={s.formItem} label=\"Username\" name=\"username\"\r\n                    rules={[{required: true, message: 'Please input your username!',},]}>\r\n                    <Input className={s.formItemInput}/>\r\n                </Form.Item>\r\n\r\n                <Form.Item className={s.formItem} label=\"Password\" name=\"password\"\r\n                    rules={[{required: true, message: 'Please input your password!',},]}>\r\n                    <Input.Password  className={s.formItemInput}/>\r\n                </Form.Item>\r\n\r\n                <Form.Item className={s.formItem} name=\"remember\" valuePropName=\"checked\">\r\n                  <div  className={s.formItem}>\r\n                      <Checkbox className={s.formItemCheckbox}>Remember me</Checkbox>\r\n                  </div>\r\n                </Form.Item>\r\n\r\n                <Form.Item className={s.formItem}>\r\n                    <Button block className={s.formItemButton} type=\"primary\" htmlType=\"submit\">Sign In</Button>\r\n                </Form.Item>\r\n\r\n                {props.error && <div className={s.error}>{props.error}</div>}\r\n\r\n            </Form>);\r\n});\r\n\r\n\r\nconst ReduxLoginForm = React.memo(reduxForm({form: 'login'})(LoginForm))\r\n\r\n\r\n\r\n\r\nconst SignIn = React.memo((props) => {\r\n    useEffect(() => {\r\n        openNotification()\r\n    }, [])\r\n\r\n    const onFinish = (values) => {\r\n        const {username, password, remember} = values\r\n        props.signInRequest(username, password, remember);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    const openNotification = () => {\r\n        notification.open({\r\n            message: '',\r\n            description:\r\n            // 'Sinash uchun istalgan login parolni kiriting!',\r\n            // ' Enter the desired login password to try ',\r\n                'Введите желаемый логин и пароль для входа, чтобы попробовать сайт',\r\n        });\r\n    };\r\n    return (<div className={s.endForm}>\r\n            <ReduxLoginForm onFinish={onFinish} />\r\n        </div>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state)\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {signInRequest})\r\n)(SignIn);"],"sourceRoot":""}