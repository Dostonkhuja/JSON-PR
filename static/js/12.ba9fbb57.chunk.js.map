{"version":3,"sources":["reselect/CommentsReselect.js","Components/Comments/Comment.jsx","Components/Comments/Comments.jsx","Components/Comments/CommentsContainer.jsx"],"names":["getCommentsRs","state","commentsPage","comments","getCommentsPageSizeRs","pageSize","getCommentsCurrentPageRs","currentPage","Comment","props","style","marginTop","name","email","body","Comments","size","showQuickJumper","defaultCurrent","defaultPageSize","total","length","onChange","pageNumber","updateCurrentPage","updatePageSize","slice","map","c","id","CommentsContainer","this","getComments","React","Component","compose","connect"],"mappings":"0MAAaA,EAAc,SAACC,GACxB,OAAOA,EAAMC,aAAaC,UAGjBC,EAAsB,SAACH,GAChC,OAAOA,EAAMC,aAAaG,UAGjBC,EAAyB,SAACL,GACnC,OAAOA,EAAMC,aAAaK,a,iCCKfC,EAVC,SAACC,GACb,OACI,eAAC,IAAD,CAAMC,MAAO,CAACC,UAAU,IAAxB,UACA,4BAAIF,EAAMN,SAASS,OACf,yCAAYH,EAAMN,SAASU,MAA3B,OACJ,4BAAIJ,EAAMN,SAASW,W,kBCkBZC,EAtBE,SAACN,GACd,GAAoB,OAAjBA,EAAMN,SAAiB,OAAO,cAAC,IAAD,CAAMa,KAAK,UAK5C,OACI,gCACI,cAAC,IAAD,CACIC,iBAAe,EACfC,eAAgB,EAChBC,gBAAiB,GACjBC,MAAOX,EAAMN,SAASkB,OACtBC,SAXgB,SAACC,EAAYlB,GACrCI,EAAMe,kBAAkBD,GACxBd,EAAMgB,eAAepB,MAWhBI,EAAMN,SACFuB,MAAMjB,EAAMF,YAAcE,EAAMJ,SAASI,EAAMF,YAAcE,EAAMJ,SAAWI,EAAMJ,UACpFsB,KAAI,SAAAC,GAAC,OAAG,cAAC,EAAD,CAASzB,SAAUyB,GAAQA,EAAEC,W,QCdhDC,E,uKACF,WACIC,KAAKtB,MAAMuB,gB,oBAEf,WACI,OACI,8BACI,cAAC,EAAD,CACI7B,SAAU4B,KAAKtB,MAAMN,SACrBE,SAAU0B,KAAKtB,MAAMJ,SACrBE,YAAawB,KAAKtB,MAAMF,YACxBkB,eAAgBM,KAAKtB,MAAMgB,eAC3BD,kBAAmBO,KAAKtB,MAAMe,0B,GAZlBS,IAAMC,WAyBvBC,sBACXC,aAPoB,SAACnC,GAAD,MAAY,CAChCE,SAAUH,EAAcC,GACxBI,SAAUD,EAAsBH,GAChCM,YAAaD,EAAyBL,MAIb,CAAC+B,gBAAaP,mBAAgBD,wBAD5CW,CAEbL","file":"static/js/12.ba9fbb57.chunk.js","sourcesContent":["export const getCommentsRs=(state)=>{\r\n    return state.commentsPage.comments\r\n}\r\n\r\nexport const getCommentsPageSizeRs=(state)=>{\r\n    return state.commentsPage.pageSize\r\n}\r\n\r\nexport const getCommentsCurrentPageRs=(state)=>{\r\n    return state.commentsPage.currentPage\r\n}","import React from 'react';\r\n\r\nimport {Card} from \"antd\";\r\n\r\nconst Comment = (props) => {\r\n    return (\r\n        <Card style={{marginTop:15}}>\r\n        <p>{props.comments.name}</p>\r\n            <p>email : {props.comments.email} </p>\r\n        <i>{props.comments.body}</i>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Comment;","import React from 'react';\r\n\r\nimport Comment from \"./Comment\";\r\nimport {Pagination,Spin} from \"antd\";\r\n\r\nconst Comments = (props) => {\r\n    if(props.comments===null){return <Spin size=\"large\" />}\r\n    let onPaginationValueChange=(pageNumber, pageSize,)=> {\r\n        props.updateCurrentPage(pageNumber)\r\n        props.updatePageSize(pageSize)\r\n    }\r\n    return (\r\n        <div>\r\n            <Pagination\r\n                showQuickJumper\r\n                defaultCurrent={1}\r\n                defaultPageSize={10}\r\n                total={props.comments.length}\r\n                onChange={onPaginationValueChange}\r\n            />\r\n            {props.comments\r\n                .slice(props.currentPage * props.pageSize,props.currentPage * props.pageSize + props.pageSize)\r\n                .map(c=> <Comment comments={c} key={c.id} />)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comments;","import React from 'react';\r\n\r\nimport {getCommentsCurrentPageRs, getCommentsPageSizeRs, getCommentsRs} from \"../../reselect/CommentsReselect\";\r\nimport {getComments, updateCurrentPage, updatePageSize} from \"../../reducers/comments-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Comments from \"./Comments\";\r\nimport {compose} from \"redux\";\r\n\r\nclass CommentsContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getComments()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Comments\r\n                    comments={this.props.comments}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    updatePageSize={this.props.updatePageSize}\r\n                    updateCurrentPage={this.props.updateCurrentPage}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    comments: getCommentsRs(state),\r\n    pageSize: getCommentsPageSizeRs(state),\r\n    currentPage: getCommentsCurrentPageRs(state),\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getComments, updatePageSize, updateCurrentPage})\r\n)(CommentsContainer);"],"sourceRoot":""}