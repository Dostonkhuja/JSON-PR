{"version":3,"sources":["Components/Photos/photos.module.css","Components/Photos/Photo.jsx","Components/Photos/Photos.jsx","reselect/PhotosReselect.js","Components/Photos/PhotosContainer.jsx"],"names":["module","exports","Meta","Card","Photo","props","className","s","photo","hoverable","style","width","src","photos","url","title","Photos","length","Preloader","photosContainer","showQuickJumper","defaultCurrent","defaultPageSize","total","onChange","pageNumber","pageSize","updateCurrentPage","updatePageSize","corusel","autoplay","effect","contentStyle","slice","currentPage","map","p","id","getPhotosRs","state","photosPage","getPhotosPageSizeRs","getPhotosCurrentPageRs","PhotosContainer","this","getPhotos","React","Component","compose","connect"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,MAAQ,sBAAsB,aAAe,6BAA6B,QAAU,0B,gJCIjJC,EAAQC,IAARD,KAaQE,EAXD,SAACC,GACX,OACI,qBAAKC,UAAWC,IAAEC,MAAlB,SACI,eAAC,IAAD,CAAMC,WAAS,EAACC,MAAO,CAACC,MAAO,KAA/B,UACI,cAAC,IAAD,CAAOA,MAAO,IAAKC,IAAKP,EAAMQ,OAAOC,MACrC,cAACZ,EAAD,CAAMa,MAAOV,EAAMQ,OAAOE,c,0BCuC3BC,EA3CA,SAACX,GAEZ,GAAKA,EAAMQ,OAAOI,OAAO,EAAI,OAAO,cAACC,EAAA,EAAD,IAOpC,OACI,sBAAKZ,UAAWC,IAAEY,gBAAlB,UACI,cAAC,IAAD,CACIC,iBAAe,EACfC,eAAgB,EAChBC,gBAAiB,GACjBC,MAAOlB,EAAMQ,OAAOI,OACpBO,SAZkB,SAACC,EAAYC,GACvCrB,EAAMsB,kBAAkBF,GACxBpB,EAAMuB,eAAeF,MAYjB,qBAAKpB,UAAWC,IAAEsB,QAAlB,SACI,eAAC,IAAD,CAAUC,UAAQ,EAACC,OAAO,OAA1B,UACI,8BACI,qBAAKzB,UAAWC,IAAEyB,aAAcpB,IAAKP,EAAMQ,OAAO,GAAGC,QAEzD,8BACI,qBAAKR,UAAWC,IAAEyB,aAAcpB,IAAKP,EAAMQ,OAAO,GAAGC,QAEzD,8BACI,qBAAKR,UAAWC,IAAEyB,aAAcpB,IAAKP,EAAMQ,OAAO,GAAGC,QAEzD,8BACI,qBAAKR,UAAWC,IAAEyB,aAAcpB,IAAKP,EAAMQ,OAAO,GAAGC,aAK7DT,EAAMQ,OACLoB,MAAM5B,EAAM6B,YAAc7B,EAAMqB,SAASrB,EAAM6B,YAAc7B,EAAMqB,SAAWrB,EAAMqB,UACpFS,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAOvB,OAAQuB,GAAQA,EAAEC,W,yBC7CtCC,EAAY,SAACC,GACtB,OAAOA,EAAMC,WAAW3B,QAGf4B,EAAoB,SAACF,GAC9B,OAAOA,EAAMC,WAAWd,UAGfgB,EAAuB,SAACH,GACjC,OAAOA,EAAMC,WAAWN,aCAtBS,E,uKACF,WACIC,KAAKvC,MAAMwC,c,oBAGf,WACI,OACI,cAAC,EAAD,CACAhC,OAAQ+B,KAAKvC,MAAMQ,OACnBa,SAAUkB,KAAKvC,MAAMqB,SACrBQ,YAAaU,KAAKvC,MAAM6B,YACxBN,eAAgBgB,KAAKvC,MAAMuB,eAC3BD,kBAAmBiB,KAAKvC,MAAMsB,wB,GAZZmB,IAAMC,WAuBrBC,sBACXC,aAPoB,SAACV,GAAD,MAAY,CAChC1B,OAAQyB,EAAYC,GACpBb,SAAUe,EAAoBF,GAC9BL,YAAaQ,EAAuBH,MAIX,CAACM,cAAWjB,mBAAgBD,wBAD1CqB,CAEbL","file":"static/js/10.7a0ff8f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"photosContainer\":\"photos_photosContainer__3EoCe\",\"photo\":\"photos_photo__IlyUk\",\"contentStyle\":\"photos_contentStyle__3zpHr\",\"corusel\":\"photos_corusel__cEXOj\"};","import React from 'react';\r\n\r\nimport {Card, Image} from 'antd';\r\nimport s from './photos.module.css'\r\n\r\nconst {Meta} = Card;\r\n\r\nconst Photo = (props) => {\r\n    return (\r\n        <div className={s.photo}>\r\n            <Card hoverable style={{width: 230}}>\r\n                <Image width={182} src={props.photos.url} />\r\n                <Meta title={props.photos.title} />\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Photo;","import React from 'react';\r\n\r\nimport 'antd/dist/antd.css'\r\nimport Photo from \"./Photo\";\r\nimport s from './photos.module.css'\r\nimport {Carousel, Pagination} from 'antd';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Photos = (props) => {\r\n\r\n    if  (props.photos.length<1) {return <Preloader/>}\r\n\r\n    const onPaginationValueChange=(pageNumber, pageSize,)=> {\r\n        props.updateCurrentPage(pageNumber)\r\n        props.updatePageSize(pageSize)\r\n    }\r\n\r\n    return (\r\n        <div className={s.photosContainer}>\r\n            <Pagination\r\n                showQuickJumper\r\n                defaultCurrent={1}\r\n                defaultPageSize={50}\r\n                total={props.photos.length}\r\n                onChange={onPaginationValueChange}\r\n            />\r\n            <div className={s.corusel}>\r\n                <Carousel autoplay effect=\"fade\">\r\n                    <div>\r\n                        <img className={s.contentStyle} src={props.photos[0].url} />\r\n                    </div>\r\n                    <div>\r\n                        <img className={s.contentStyle} src={props.photos[1].url} />\r\n                    </div>\r\n                    <div>\r\n                        <img className={s.contentStyle} src={props.photos[2].url} />\r\n                    </div>\r\n                    <div>\r\n                        <img className={s.contentStyle} src={props.photos[3].url} />\r\n                    </div>\r\n                </Carousel>\r\n            </div>\r\n            {\r\n                props.photos\r\n                .slice(props.currentPage * props.pageSize,props.currentPage * props.pageSize + props.pageSize)\r\n                .map(p => <Photo photos={p} key={p.id}/> )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Photos;","export const getPhotosRs=(state)=>{\r\n    return state.photosPage.photos\r\n}\r\n\r\nexport const getPhotosPageSizeRs=(state)=>{\r\n    return state.photosPage.pageSize\r\n}\r\n\r\nexport const getPhotosCurrentPageRs=(state)=>{\r\n    return state.photosPage.currentPage\r\n}","import React from 'react';\r\n\r\nimport Photos from \"./Photos\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {getPhotos} from \"../../reducers/photos-reducer\";\r\nimport {updateCurrentPage, updatePageSize} from \"../../reducers/photos-reducer\";\r\nimport {getPhotosCurrentPageRs, getPhotosPageSizeRs, getPhotosRs} from \"../../reselect/PhotosReselect\";\r\n\r\nclass PhotosContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getPhotos()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Photos\r\n            photos={this.props.photos}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            updatePageSize={this.props.updatePageSize}\r\n            updateCurrentPage={this.props.updateCurrentPage} />\r\n       )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    photos: getPhotosRs(state),\r\n    pageSize: getPhotosPageSizeRs(state),\r\n    currentPage: getPhotosCurrentPageRs(state),\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getPhotos, updatePageSize, updateCurrentPage})\r\n)(PhotosContainer);"],"sourceRoot":""}