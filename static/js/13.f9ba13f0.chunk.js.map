{"version":3,"sources":["Components/Login/SignIn.jsx"],"names":["LoginForm","React","memo","onFinish","props","name","initialValues","remember","onFinishFailed","error","className","s","form","title","Item","label","rules","required","message","Password","valuePropName","type","htmlType","ReduxLoginForm","reduxForm","SignIn","useEffect","openNotification","isAuth","to","notification","open","description","values","username","password","signInRequest","compose","connect","state","getIsAuth"],"mappings":"0SAYMA,EAAYC,IAAMC,MAAK,YAA2B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,4BAInD,OAAQ,mCACA,eAAC,IAAD,CACIC,KAAK,QACLC,cAAe,CAACC,UAAU,GAC1BJ,SAAUA,EACVK,eARW,SAACC,KASZC,UAAWC,IAAEC,KALjB,UAOI,oBAAIF,UAAWC,IAAEE,MAAjB,qBACA,cAAC,IAAKC,KAAN,CACIC,MAAM,WACNV,KAAK,WACLW,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,gCAHtC,SAKI,cAAC,IAAD,MAEJ,cAAC,IAAKJ,KAAN,CACIC,MAAM,WACNV,KAAK,WACLW,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,gCAHtC,SAKI,cAAC,IAAMC,SAAP,MAEJ,cAAC,IAAKL,KAAN,CACIT,KAAK,WACLe,cAAc,UAFlB,SAGI,cAAC,IAAD,4BAEJ,cAAC,IAAKN,KAAN,UAEI,cAAC,IAAD,CAAQO,KAAK,UAAUC,SAAS,SAAhC,uBAEHlB,EAAMK,OAAS,qBAAKC,UAAWC,IAAEF,MAAlB,SAA0BL,EAAMK,gBAO1Dc,EAAiBtB,IAAMC,KAAKsB,YAAU,CAACZ,KAAM,SAAjBY,CAA2BxB,IAGvDyB,EAASxB,IAAMC,MAAK,SAACE,GACvBsB,qBAAU,WACNC,MACD,IAOH,GAAIvB,EAAMwB,OACN,OAAO,cAAC,IAAD,CAAUC,GAAI,aAGzB,IAAMF,EAAmB,WACrBG,IAAaC,KAAK,CACdb,QAAS,GACTc,YAGI,0VAGZ,OAAQ,8BACA,cAACT,EAAD,CAAgBpB,SAnBP,SAAC8B,GAAY,IACnBC,EAAgCD,EAAhCC,SAAUC,EAAsBF,EAAtBE,SAAU5B,EAAY0B,EAAZ1B,SAC3BH,EAAMgC,cAAcF,EAAUC,EAAU5B,WA0BjC8B,sBACXC,aALoB,SAACC,GAAD,MAAY,CAChCX,OAAQY,YAAUD,MAIO,CAACH,oBADfC,CAEbZ","file":"static/js/13.f9ba13f0.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\n\r\nimport {compose} from \"redux\";\r\nimport {notification} from 'antd';\r\nimport s from './login.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Form, Input, Button, Checkbox} from 'antd';\r\nimport {getIsAuth} from \"../../reselect/LoginReselect\";\r\nimport {signInRequest} from \"../../reducers/auth-reducer\";\r\n\r\nconst LoginForm = React.memo(({onFinish, ...props}) => {\r\n    const onFinishFailed = (error) => {\r\n    };\r\n\r\n    return (<>\r\n            <Form\r\n                name=\"basic\"\r\n                initialValues={{remember: false,}}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                className={s.form}\r\n            >\r\n                <h1 className={s.title}>SIGN IN</h1>\r\n                <Form.Item\r\n                    label=\"Username\"\r\n                    name=\"username\"\r\n                    rules={[{required: true, message: 'Please input your username!',},]}\r\n                >\r\n                    <Input/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[{required: true, message: 'Please input your password!',},]}\r\n                >\r\n                    <Input.Password/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"remember\"\r\n                    valuePropName=\"checked\">\r\n                    <Checkbox>Remember me</Checkbox>\r\n                </Form.Item>\r\n                <Form.Item\r\n                >\r\n                    <Button type=\"primary\" htmlType=\"submit\">SIGN IN</Button>\r\n                </Form.Item>\r\n                {props.error && <div className={s.error}>{props.error}</div>}\r\n            </Form>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nconst ReduxLoginForm = React.memo(reduxForm({form: 'login'})(LoginForm))\r\n\r\n\r\nconst SignIn = React.memo((props) => {\r\n    useEffect(() => {\r\n        openNotification()\r\n    }, [])\r\n\r\n    const onFinish = (values) => {\r\n        const {username, password, remember} = values\r\n        props.signInRequest(username, password, remember);\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    const openNotification = () => {\r\n        notification.open({\r\n            message: '',\r\n            description:\r\n            // 'Sinash uchun istalgan login parolni kiriting!',\r\n            // ' Enter the desired login password to try ',\r\n                'Введите желаемый логин и пароль для входа, чтобы попробовать сайт',\r\n        });\r\n    };\r\n    return (<div>\r\n            <ReduxLoginForm onFinish={onFinish}/>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state)\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {signInRequest})\r\n)(SignIn);"],"sourceRoot":""}